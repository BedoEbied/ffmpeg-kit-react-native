buildscript {
  repositories {
    google()
    mavenCentral()
  }

  dependencies {
    classpath 'com.android.tools.build:gradle:8.1.0'
  }
}

apply plugin: 'com.android.library'

def safePackageVersion(String packageName) {
  def version = project.properties['ffmpegKit.android.main.version']
  def ltsVersion = project.properties['ffmpegKit.android.lts.version']
  packageName.contains("-lts") ? ltsVersion + ".LTS" : version
}

def safeExtGet(String prop, String fallback) {
  rootProject.ext.has(prop) ? rootProject.ext.get(prop) : fallback
}

android {
  if (project.android.hasProperty("namespace")) {
    namespace 'com.arthenica.ffmpegkit.reactnative'
  }

  compileSdkVersion 34

  defaultConfig {
    minSdkVersion 24
    targetSdkVersion 34
    versionCode 602
    versionName "6.0.2"
  }

  buildTypes {
    release {
      minifyEnabled false
    }
  }
  lintOptions {
    disable 'GradleCompatible'
  }
  compileOptions {
    sourceCompatibility JavaVersion.VERSION_11
    targetCompatibility JavaVersion.VERSION_11
  }

}

repositories {
  google()
  mavenCentral()
  flatDir {
    dirs 'libs'
  }


  // (existing React Native repo detection logic unchanged)
  def found = false
  def defaultDir = null
  def androidSourcesName = 'React Native sources'

  if (rootProject.ext.has('reactNativeAndroidRoot')) {
    defaultDir = rootProject.ext.get('reactNativeAndroidRoot')
  } else {
    defaultDir = new File(projectDir, 'node_modules/react-native/android')
  }

  if (defaultDir.exists()) {
    maven { url defaultDir.toString(); name androidSourcesName }
    logger.info(":${project.name}:reactNativeAndroidRoot ${defaultDir.canonicalPath}")
    found = true
  } else {
    def parentDir = rootProject.projectDir
    1.upto(5, {
      if (found) return true
      parentDir = parentDir.parentFile
      def androidSourcesDir = new File(parentDir, 'node_modules/react-native')
      def androidPrebuiltBinaryDir = new File(parentDir, 'node_modules/react-native/android')
      if (androidPrebuiltBinaryDir.exists()) {
        maven { url androidPrebuiltBinaryDir.toString(); name androidSourcesName }
        logger.info(":${project.name}:reactNativeAndroidRoot ${androidPrebuiltBinaryDir.canonicalPath}")
        found = true
      } else if (androidSourcesDir.exists()) {
        maven { url androidSourcesDir.toString(); name androidSourcesName }
        logger.info(":${project.name}:reactNativeAndroidRoot ${androidSourcesDir.canonicalPath}")
        found = true
      }
    })
  }

  if (!found) {
    throw new GradleException("${project.name}: unable to locate React Native android sources.")
  }
}

dependencies {
  api 'com.facebook.react:react-native:+'

  def ffmpegPackageValue = safeExtGet('ffmpegKitPackage', 'min-gpl') // min-gpl, https, etc.

  implementation(name: 'ffmpeg-kit-min-gpl-6.0-2', ext: 'aar') 
}
